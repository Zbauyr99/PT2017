import math
from PIL import Image, ImageDraw
im = Image.open("7.jpg")
rgb_im = im.convert("RGB")#.resize((100,100))
size = rgb_im.size
h, w = size
pix = rgb_im.load()

min_r = 0
min_g = 0
min_b = 0
index_y = 0
index_y1 = 0



# for y in range(0, w):
# 	for x in range(0, h):
# 		r ,g ,b = pix[x, y]
# 		S = (r + g + b) // 3
# 		pix[x, y] = (S, S, S)



for y in range(0, w):
	for x in range(0, h):
		r, g, b = pix[x, y]

		if (((math.fabs(min_r - r)) < 30) and ((math.fabs(min_g - g)) < 30) and ((math.fabs(min_b-b)) <30)):

			r1 = r
			g1 = g
			b1 = b
			index_y = y

			for y in range(w-1, index_y, -3):
				for x in range(0, h):
					r, g, b = pix[x, y]
					if r == r1 and g == g1 and b == b1:
						y = index_y1
						#print(index_y1)
						r = 255
						g = 0
						b = 0
						pix[x, y] = (r, g, b)
						#print(index_y)
						break
					if ((math.fabs(r1 - r) <5) and (math.fabs(g1 - g) < 5) and (math.fabs(b1-b) <5)):
						r = 255
						g =0
						b = 0
						pix[x, y] = (r, g, b)
						y = index_y1
						#print(index_y)
						break
					else:
						pass


rgb_im.save("test6.jpg")
